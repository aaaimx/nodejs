(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{765:function(e,t,s){"use strict";s.r(t);var a=s(70),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"express-js-project-setup"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#express-js-project-setup"}},[e._v("#")]),e._v(" Express.js Project Setup")]),e._v(" "),s("p",[s("strong",[e._v("Express.js")]),e._v(" is a popular web framework written in JavaScript. This module's job is to ease the development process and help you set up your API.")]),e._v(" "),s("p",[e._v("It can be installed using: $ "),s("strong",[e._v("npm install express --save")]),e._v("\nTo use it in a module, you need to import and call it as a method like the following:")]),e._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" express "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'express'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" app "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("express")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),s("p",[e._v("It is possible to write an API without using any framework (pure Node.js). However, it is recommended to use a stable framework to have an easily maintainable API that provides minimal boilerplate code.")]),e._v(" "),s("p",[e._v("To setup a project, create a directory and initialize the node project ($ "),s("strong",[e._v("npm init")]),e._v("). You can leave the options as they are during initialization, and if you need to, change them later from the "),s("strong",[e._v("package.json")]),e._v(" file.")]),e._v(" "),s("p",[e._v("In the end, our project will have the structure described below.")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(".\n├── api\n│      ├── middleware\n│      │      ├── check-auth.js\n│      │      └── query-validator.js\n│      ├── models\n│      │      ├── code.js\n│      │      └── user.js\n│      └── routes\n│               ├── codes.js\n│               └── users.js\n├── app.js\n├── package.json\n└── server.js\n4 directories, 9 files\n")])])]),s("p",[e._v("In your project directory, type "),s("strong",[e._v("npm install express --save")]),e._v(" in the terminal to install the Express framework. Then add the "),s("strong",[e._v("app.js")]),e._v(" and "),s("strong",[e._v("server.js")]),e._v(" files in the projects main directory.")]),e._v(" "),s("blockquote",[s("p",[e._v("!Check your package.json file after running the command above to verify that the express module was installed. Note that the node_modules directory is also created.")])])])}),[],!1,null,null,null);t.default=n.exports}}]);