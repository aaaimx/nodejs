(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{762:function(s,a,t){"use strict";t.r(a);var e=t(70),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"ruta-de-usuarios-get"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ruta-de-usuarios-get"}},[s._v("#")]),s._v(" Ruta de usuarios (GET)")]),s._v(" "),t("p",[s._v("Necesitamos tener todas nuestras cosas específicas de la API, como "),t("strong",[s._v("rutas")]),s._v(", en un solo lugar. Así que creemos un directorio '"),t("strong",[s._v("api")]),s._v("' y un subdirectorio de 'rutas', donde guardaremos nuestros archivos '"),t("strong",[s._v("codes.js")]),s._v("' y '"),t("strong",[s._v("users.js")]),s._v("'. Entonces, la "),t("strong",[s._v("estructura")]),s._v(" es la siguiente:")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v(".\n├── api\n│  │\n│  └── routes\n│      ├── codes.js\n│      └── users.js\n├── app.js\n├── package.json\n└── server.js\n2 directories, 5 files\n")])])]),t("p",[s._v("Ahora que tenemos el archivo "),t("strong",[s._v("api/routes/users.js")]),s._v(", creemos nuestra primera ruta de usuario (GET) que devolverá a todos los usuarios. El archivo "),t("strong",[s._v("api/routes/users.js")]),s._v(" contendrá todas las rutas relacionadas con los usuarios.")]),s._v(" "),t("p",[s._v("Abra el archivo api/routes/users.js e importe el módulo 'express'. Necesitamos llamar al método "),t("strong",[s._v("Router()")]),s._v(" en la instancia Express para usar las funcionalidades de enrutamiento:")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// users.js")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" express "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'express'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" router "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" express"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Router")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[s._v("Ahora, necesitamos usar el enrutador para implementar manejadores de solicitud (handlers) de la API para el usuario "),t("strong",[s._v("resource")]),s._v(".")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// users.js")]),s._v("\nrouter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("req"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" res"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" next")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  res"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("status")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("200")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("json")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    message"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Handling GET request of the /users'")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[t("strong",[s._v("get()")]),s._v(" es un método que toma dos argumentos. El primero es el "),t("em",[s._v("URL")]),s._v("* y el segundo argumento es la función "),t("strong",[s._v("handler")]),s._v(". No hay nada nuevo en el cuerpo del controlador (handler), donde responde con el estado de 200 en formato JSON con un mensaje personalizado.")]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),t("p",[s._v("Tenga en cuenta que el primer argumento del método "),t("strong",[s._v("get()")]),s._v(" es URL, y solo estamos usando una barra diagonal (/). Pero queremos que nuestra ruta sea "),t("strong",[s._v("/localhost:3000/users/")]),s._v(". Para eso, necesitamos algunas modificaciones en el archivo "),t("strong",[s._v("app.js")]),s._v(".")])]),s._v(" "),t("h2",{attrs:{id:"configuracion-de-la-ruta-usuarios"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#configuracion-de-la-ruta-usuarios"}},[s._v("#")]),s._v(" Configuración de la ruta usuarios")]),s._v(" "),t("p",[s._v("Ya agregamos nuestra ruta GET en el archivo users.js, pero necesitamos arreglar algunas cosas.")]),s._v(" "),t("p",[s._v("Sabemos que nuestra URL base es "),t("strong",[s._v("localhost: 3000")]),s._v(", y todo lo que esté dentro del archivo users.js debe estar debajo de "),t("strong",[s._v("localhost: 3000/users")]),s._v(", así que configurémoslo desde el archivo app.js donde estará manejando todas las solicitudes entrantes de la ruta users.js atacando a /"),t("strong",[s._v("users")]),s._v(" antes de la ruta en sí.")]),s._v(" "),t("p",[s._v("Primero, importe el users.js dentro del archivo app.js:")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// app.js")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" usersRoutes "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./api/routes/users'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),t("p",[s._v("Ahora, modifiquemos el método "),t("strong",[s._v("app.use ()")]),s._v(" para recibir las solicitudes "),t("strong",[s._v("usersRoutes")]),s._v(" y adjuntemos la URL (ruta):")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// app.js")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" usersRoutes "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./api/routes/users'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\napp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("use")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/users'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" usersRoutes"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),t("p",[s._v("Tenga en cuenta que si en users.js escribimos nuestra ruta GET como: '/"),t("strong",[s._v("users")]),s._v("/' en lugar de '/', nuestra ruta completa será: "),t("strong",[s._v("localhost: 3000/users/users")]),s._v(", que "),t("strong",[s._v("no")]),s._v(" es el nombre deseado.")])])])}),[],!1,null,null,null);a.default=n.exports}}]);